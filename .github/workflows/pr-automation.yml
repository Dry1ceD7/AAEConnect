name: Pull Request Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          test
          chore
          ci
          build
          revert
          
    - name: Check for BMAD compliance
      run: |
        echo "Checking BMAD Method compliance..."
        
        # Check if story files are updated
        if git diff --name-only origin/main...HEAD | grep -q "docs/stories/"; then
          echo "✅ Story documentation updated"
        else
          echo "⚠️ No story documentation changes detected"
        fi
        
        # Check if tests are included
        if git diff --name-only origin/main...HEAD | grep -E "\.(test|spec)\.(js|ts|jsx|tsx)$"; then
          echo "✅ Test files included"
        else
          echo "⚠️ No test files detected in changes"
        fi
        
    - name: Run BMAD QA validation
      run: |
        if [ -f "package.json" ] && grep -q "bmad" package.json; then
          echo "Running BMAD QA validation..."
          # This would integrate with BMAD QA agent for automated review
        fi

  auto-label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Label PR based on changes
      uses: actions/labeler@v5
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        configuration-path: .github/labeler.yml
        
  size-label:
    name: Size Label
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Add size label
      uses: codelytv/pr-size-labeler@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        xs_label: 'size/XS'
        xs_max_size: 10
        s_label: 'size/S'
        s_max_size: 100
        m_label: 'size/M'
        m_max_size: 500
        l_label: 'size/L'
        l_max_size: 1000
        xl_label: 'size/XL'
        
  bmad-review:
    name: BMAD Automated Review
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'synchronize'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install BMAD Method
      run: npx bmad-method install --full --directory . --ide github-copilot
      
    - name: Run automated BMAD review
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.number }}
      run: |
        echo "Running BMAD automated review for PR #$PR_NUMBER"
        
        # Get changed files
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD)
        
        # Create review comment with BMAD insights
        cat > review_comment.md << 'EOF'
        ## 🧙 BMAD Method Automated Review
        
        This PR has been automatically reviewed using BMAD Method principles:
        
        ### Changes Summary
        ```
        $CHANGED_FILES
        ```
        
        ### BMAD Compliance Check
        - [ ] Story documentation updated
        - [ ] Architecture alignment verified
        - [ ] Test coverage adequate
        - [ ] Quality gates passed
        
        ### Recommendations
        - Follow BMAD development cycle guidelines
        - Ensure proper test coverage for all changes
        - Update relevant documentation
        
        *This review was generated automatically by BMAD Method*
        EOF
        
        # Post comment using GitHub CLI (if available) or API
        if command -v gh &> /dev/null; then
          gh pr comment $PR_NUMBER --body-file review_comment.md
        fi

  auto-merge:
    name: Auto Merge
    runs-on: ubuntu-latest
    needs: [pr-validation, auto-label, size-label]
    if: |
      github.event.pull_request.draft == false &&
      contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
      github.event.pull_request.user.login == 'dependabot[bot]'
      
    steps:
    - name: Auto merge dependabot PRs
      uses: pascalgn/merge-action@v0.15.6
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        merge_method: squash
